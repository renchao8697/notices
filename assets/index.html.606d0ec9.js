import{_ as n,o as s,c as a,d as t}from"./app.30d0ff3e.js";var p="/note/images/javascript/stack.png",e="/note/images/javascript/queue.png",o="/note/images/javascript/linked_list.png",c="/note/images/javascript/set.png",l="/note/images/javascript/hash_table.png";const i={},u=t('<h1 id="js\u5B9E\u73B0\u5E38\u89C1\u7684\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#js\u5B9E\u73B0\u5E38\u89C1\u7684\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> JS\u5B9E\u73B0\u5E38\u89C1\u7684\u6570\u636E\u7ED3\u6784</h1><h2 id="stack-\u6808" tabindex="-1"><a class="header-anchor" href="#stack-\u6808" aria-hidden="true">#</a> Stack\uFF08\u6808\uFF09</h2><p><img src="'+p+`" alt="stack"></p><p><code>Stack</code>\u7684\u7279\u70B9\u662F\u540E\u8FDB\u5148\u51FA\uFF08last in first out\uFF09\u3002\u6BD4\u5982\u5F39\u5939\uFF0C\u540E\u88C5\u5165\u7684\u5B50\u5F39\u4F1A\u5148\u53D1\u5C04\u51FA\u53BB\uFF1B\u53C8\u6BD4\u5982\u6D4F\u89C8\u5668\u7684\u8BBF\u95EE\u5386\u53F2\uFF0C\u5F53\u6211\u4EEC\u70B9\u51FB\u8FD4\u56DE\u6309\u94AE\u65F6\uFF0C\u6700\u540E\u8BBF\u95EE\u7684\u7F51\u7AD9\u6700\u5148\u4ECE\u5386\u53F2\u8BB0\u5F55\u4E2D\u5F39\u51FA\u3002 Stack\u4E00\u822C\u5177\u6709\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><ul><li>push\uFF1A\u5C06\u4E00\u4E2A\u5143\u7D20\u63A8\u5165\u6808\u9876</li><li>pop\uFF1A\u79FB\u9664\u6808\u9876\u5143\u7D20\uFF0C\u5E76\u8FD4\u56DE\u88AB\u79FB\u9664\u7684\u5143\u7D20</li><li>peek\uFF1A\u8FD4\u56DE\u6808\u9876\u5143\u7D20</li><li>size\uFF1A\u8FD4\u56DE\u6808\u4E2D\u5143\u7D20\u4E2A\u6570</li></ul><p><code>Javascript</code>\u7684<code>Array</code>\u5929\u751F\u5177\u5907\u4E86<code>Stack</code>\u7684\u7279\u6027\uFF0C\u4E0B\u9762\u6211\u4EEC\u624B\u52A8\u5B9E\u73B0\u4E00\u4E2A<code>Stack</code>\u7C7B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Stack</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>storage <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">push</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storage<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="queue-\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#queue-\u961F\u5217" aria-hidden="true">#</a> Queue(\u961F\u5217)</h2><p><img src="`+e+`" alt="queue"></p><p>Queue\u548CStack\u6709\u4E00\u4E9B\u7C7B\u4F3C\uFF0C\u4E0D\u540C\u7684\u662FStack\u662F\u5148\u8FDB\u540E\u51FA\uFF0C\u800CQueue\u662F\u5148\u8FDB\u5148\u51FA\u3002Queue\u6700\u5E38\u89C1\u7684\u4F8B\u5B50\u5C31\u662F\u6392\u961F\u4E0A\u8F66\uFF0C\u6392\u5728\u7B2C\u4E00\u4E2A\u7684\u603B\u662F\u6700\u5148\u4E0A\u8F66\u3002 Queue\u4E00\u822C\u5177\u6709\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><ul><li>enqueue\uFF1A\u5165\u5217\uFF0C\u60F3\u961F\u5217\u5C3E\u90E8\u589E\u52A0\u4E00\u4E2A\u5143\u7D20</li><li>dequeue\uFF1A\u51FA\u5217\uFF0C\u79FB\u9664\u961F\u5217\u5934\u90E8\u7684\u4E00\u4E2A\u5143\u7D20\u5E76\u8FD4\u56DE\u88AB\u79FB\u9664\u7684\u5143\u7D20</li><li>front\uFF1A\u83B7\u53D6\u961F\u5217\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20</li><li>isEmpty\uFF1A\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A</li><li>size\uFF1A\u83B7\u53D6\u961F\u5217\u4E2D\u5143\u7D20\u7684\u4E2A\u6570</li></ul><p>Javascript\u4E2D\u7684Array\u5DF2\u7ECF\u5177\u5907Queue\u7684\u4E00\u4E9B\u7279\u6027\uFF0C\u4E0B\u9762\u501F\u52A9Array\u5B9E\u73B0\u4E00\u4E2AQueue\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>collection <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isEmpty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isEmpty <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isEmpty <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="priority-queue-\u4F18\u5148\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#priority-queue-\u4F18\u5148\u961F\u5217" aria-hidden="true">#</a> Priority Queue(\u4F18\u5148\u961F\u5217)</h3><p>Queue\u8FD8\u6709\u4E00\u4E2A\u5347\u7EA7\u7248\u672C\uFF0C\u7ED9\u6BCF\u4E2A\u5143\u7D20\u8D4B\u4E88\u4F18\u5148\u7EA7\uFF0C\u4F18\u5148\u7EA7\u9AD8\u7684\u5143\u7D20\u5165\u5217\u65F6\u6392\u5230\u4F4E\u4F18\u5148\u7EA7\u4E4B\u524D\u3002\u533A\u522B\u4E3B\u8981\u662Fenqueue\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">PriorityQueue</span> <span class="token keyword">extends</span> <span class="token class-name">Queue</span> <span class="token punctuation">{</span>
  <span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isEmpty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">ele</span> <span class="token operator">=&gt;</span> ele<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> element<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">~</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> element<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>collection<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>isEmpty <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> pQ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pQ<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;gannicus&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pQ<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;spartacus&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pQ<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;spartacus111&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pQ<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;crixus&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pQ<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;oenomaus&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="linked-list-\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#linked-list-\u94FE\u8868" aria-hidden="true">#</a> Linked List(\u94FE\u8868)</h2><p><img src="`+o+`" alt="linked_list"></p><p>\u94FE\u8868\u662F\u4E00\u79CD\u94FE\u5F0F\u6570\u636E\u7ED3\u6784\uFF0C\u94FE\u4E0A\u4E0A\u7684\u6BCF\u4E2A\u8282\u70B9\u5305\u542B\u4E24\u79CD\u4FE1\u606F\uFF1A\u8282\u70B9\u672C\u8EAB\u7684\u6570\u636E\u548C\u6307\u5411\u4E0B\u4E00\u4E2A\u8282\u70B9\u7684\u6307\u9488\u3002\u94FE\u8868\u548C\u4F20\u7EDF\u7684\u6570\u7EC4\u90FD\u662F\u7EBF\u6027\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u5B58\u50A8\u7684\u90FD\u662F\u4E00\u4E2A\u5E8F\u5217\u7684\u6570\u636E\uFF0C\u4F46\u4E5F\u6709\u5F88\u591A\u533A\u522B\uFF0C\u5982\u4E0B\u8868</p><table><thead><tr><th style="text-align:center;">\u6BD4\u8F83\u7EF4\u5EA6</th><th style="text-align:center;">\u6570\u7EC4</th><th style="text-align:center;">\u94FE\u8868</th></tr></thead><tbody><tr><td style="text-align:center;">\u5185\u5B58\u5206\u914D</td><td style="text-align:center;">\u9759\u6001\u5185\u5B58\u5206\u914D\uFF0C\u7F16\u8BD1\u65F6\u5206\u914D\u4E14\u8FDE\u7EED</td><td style="text-align:center;">\u52A8\u6001\u5185\u5B58\u5206\u914D\uFF0C\u8FD0\u884C\u65F6\u5206\u914D\u4E14\u4E0D\u8FDE\u7EED</td></tr><tr><td style="text-align:center;">\u5143\u7D20\u83B7\u53D6</td><td style="text-align:center;">\u901A\u8FC7inde\u83B7\u53D6\uFF0C\u901F\u5EA6\u8F83\u5FEB</td><td style="text-align:center;">\u901A\u8FC7\u904D\u5386\u987A\u5E8F\u8BBF\u95EE\uFF0C\u901F\u5EA6\u8F83\u6162</td></tr><tr><td style="text-align:center;">\u6DFB\u52A0\u5220\u9664\u5143\u7D20</td><td style="text-align:center;">\u5185\u5B58\u4F4D\u7F6E\u8FDE\u7EED\u5207\u56FA\u5B9A\uFF0C\u901F\u5EA6\u8F83\u6162</td><td style="text-align:center;">\u5185\u5B58\u5206\u914D\u7075\u6D3B\uFF0C\u53EA\u6709\u4E00\u4E2A\u5F00\u9500\u6B65\u9AA4\uFF0C\u901F\u5EA6\u66F4\u5FEB</td></tr><tr><td style="text-align:center;">\u7A7A\u95F4\u7ED3\u6784</td><td style="text-align:center;">\u53EF\u4EE5\u662F\u4E00\u7EF4\u6216\u8005\u591A\u7EF4\u6570\u7EC4</td><td style="text-align:center;">\u53EF\u4EE5\u662F\u5355\u5411\u3001\u53CC\u5411\u6216\u5FAA\u73AF\u94FE\u8868</td></tr></tbody></table><p>\u4E00\u4E2A\u5355\u5411\u94FE\u8868\u901A\u5E38\u5177\u6709\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><ul><li>size\uFF1A\u94FE\u8868\u4E2D\u8282\u70B9\u7684\u4E2A\u6570</li><li>head\uFF1A\u94FE\u8868\u4E2D\u7684\u5934\u90E8\u5143\u7D20</li><li>add\uFF1A\u9879\u94FE\u8868\u5C3E\u90E8\u589E\u52A0\u4E00\u4E2A\u8282\u70B9</li><li>remove\uFF1A\u5220\u9664\u67D0\u4E2A\u8282\u70B9</li><li>indexOf\uFF1A\u8FD4\u56DE\u67D0\u4E2A\u8282\u70B9\u7684index</li><li>elementAt\uFF1A\u8FD4\u56DE\u67D0\u4E2Aindex\u5904\u7684\u8282\u70B9</li><li>addAt\uFF1A\u5728\u67D0\u4E2Aindex\u5904\u63D2\u5165\u4E00\u4E2A\u8282\u70B9</li><li>removeAt\uFF1A\u5220\u9664\u67D0\u4E2Aindex\u5904\u7684\u8282\u70B9</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>node <span class="token operator">=</span> element<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">LinkedList</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> curNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>curNode<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        curNode <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      curNode<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">addAt</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index  <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>
      <span class="token keyword">let</span> curNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>next<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>node<span class="token punctuation">,</span> curNode<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> prevNode <span class="token operator">=</span> curNode<span class="token punctuation">;</span>
        curNode <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">[</span>prevNode<span class="token punctuation">,</span> curNode<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>curNode<span class="token punctuation">,</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">]</span>
          i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        prevNode<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
        node<span class="token punctuation">.</span>next <span class="token operator">=</span> curNode
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">remove</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> prevNode <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> curNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>curNode<span class="token punctuation">.</span>node <span class="token operator">===</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>curNode <span class="token operator">&amp;&amp;</span> curNode<span class="token punctuation">.</span>node <span class="token operator">!==</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>prevNode<span class="token punctuation">,</span> curNode<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>curNode<span class="token punctuation">,</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>curNode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        prevNode<span class="token punctuation">.</span>next <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">removeAt</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> curNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> prevNode <span class="token operator">=</span> curNode<span class="token punctuation">;</span>
      curNode <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">[</span>prevNode<span class="token punctuation">,</span> curNode<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>curNode<span class="token punctuation">,</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      prevNode<span class="token punctuation">.</span>next <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> curNode<span class="token punctuation">.</span>node
  <span class="token punctuation">}</span>
  <span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">[</span>curNode<span class="token punctuation">,</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>curNode <span class="token operator">&amp;&amp;</span> curNode<span class="token punctuation">.</span>node <span class="token operator">!==</span> element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      curNode <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> curNode <span class="token operator">?</span> i <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">elementAt</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> curNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>
    <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      curNode <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> curNode<span class="token punctuation">.</span>node<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> curNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>
    <span class="token keyword">let</span> linkedList <span class="token operator">=</span> <span class="token punctuation">[</span>curNode<span class="token punctuation">.</span>node<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>curNode<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      linkedList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>curNode<span class="token punctuation">.</span>next<span class="token punctuation">.</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      curNode <span class="token operator">=</span> curNode<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>linkedList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;==&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="set-\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#set-\u96C6\u5408" aria-hidden="true">#</a> Set(\u96C6\u5408)</h2><p><img src="`+c+'" alt="set"></p><p>\u96C6\u5408\u662F\u6570\u5B66\u4E2D\u7684\u4E00\u4E2A\u57FA\u672C\u6982\u5FF5\uFF0C\u8868\u793A\u5177\u6709\u67D0\u79CD\u7279\u6027\u7684\u5BF9\u8C61\u6C47\u603B\u6210\u7684\u96C6\u4F53\u3002\u5728ES6\u4E2D\u4E5F\u5F15\u5165\u4E86\u96C6\u5408\u7C7B\u578B<code>Set</code>,<code>Set</code>\u548C<code>Array</code>\u6709\u4E00\u5B9A\u7A0B\u5EA6\u7684\u76F8\u4F3C\uFF0C\u4E0D\u540C\u7684\u662F<code>Set</code>\u4E2D\u4E0D\u5141\u8BB8\u51FA\u73B0\u91CD\u590D\u7684\u5143\u7D20\u800C\u4E14\u662F\u65E0\u5E8F\u7684\u3002 \u4E00\u4E2A\u5178\u578B\u7684<code>Set</code>\u5E94\u8BE5\u5177\u6709\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><ul><li>values\uFF1A\u8FD4\u56DE\u96C6\u5408\u4E2D\u7684\u6240\u6709\u5143\u7D20</li><li>size\uFF1A\u8FD4\u56DE\u96C6\u5408\u4E2D\u5143\u7D20\u7684\u4E2A\u6570</li><li>has\uFF1A\u5224\u65AD\u96C6\u5408\u4E2D\u662F\u5426\u5B58\u5728\u67D0\u4E2A\u5143\u7D20</li><li>add\uFF1A\u5411\u96C6\u5408\u4E2D\u6DFB\u52A0\u5143\u7D20</li><li>remove\uFF1A\u4ECE\u96C6\u5408\u4E2D\u79FB\u9664\u67D0\u4E2A\u5143\u7D20</li><li>union\uFF1A\u8FD4\u56DE\u4E24\u4E2A\u96C6\u5408\u7684\u5E76\u96C6</li><li>intersection\uFF1A\u8FD4\u56DE\u4E24\u4E2A\u96C6\u5408\u7684\u4EA4\u96C6</li><li>difference\uFF1A\u8FD4\u56DE\u4E24\u4E2A\u96C6\u5408\u7684\u5DEE\u96C6</li><li>subset\uFF1A\u5224\u65AD\u4E00\u4E2A\u96C6\u5408\u662F\u5426\u4E3A\u53E6\u4E00\u4E2A\u96C6\u5408\u7684\u5B50\u96C6</li></ul><h2 id="hash-table-\u54C8\u5E0C\u8868-\u6563\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#hash-table-\u54C8\u5E0C\u8868-\u6563\u5217\u8868" aria-hidden="true">#</a> Hash Table(\u54C8\u5E0C\u8868/\u6563\u5217\u8868)</h2><p><img src="'+l+'" alt="hash_table"></p><p>Hash Table\u662F\u4E00\u79CD\u7528\u4E8E\u5B58\u50A8\u952E\u503C\u5BF9\uFF08key value pair\uFF09\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u56E0\u4E3AHash Table\u6839\u636Ekey\u67E5\u8BE2value\u7684\u901F\u5EA6\u5F88\u5FEB\uFF0C\u6240\u4EE5\u5B83\u5E38\u7528\u4E8E\u5B9E\u73B0Map\u3001Dictionary\u3001Object\u7B49\u6570\u636E\u7ED3\u6784\u3002\u5982\u4E0A\u56FE\u6240\u793A\uFF0CHash Table\u5185\u90E8\u4F7F\u7528\u4E00\u4E2Ahash\u51FD\u6570\u5C06\u4F20\u5165\u7684\u952E\u8F6C\u6362\u6210\u4E00\u4E32\u6570\u5B57\uFF0C\u800C\u8FD9\u4E32\u6570\u5B57\u5C06\u4F5C\u4E3A\u952E\u503C\u5BF9\u5B9E\u9645\u7684key\uFF0C\u901A\u8FC7\u8FD9\u4E2Akey\u67E5\u8BE2\u5BF9\u5E94\u7684value\u975E\u5E38\u5FEB\uFF0C\u65F6\u95F4\u590D\u6742\u5EA6\u5C06\u8FBE\u5230O(1)\u3002Hash\u51FD\u6570\u8981\u6C42\u76F8\u540C\u8F93\u5165\u5BF9\u5E94\u7684\u8F93\u51FA\u5FC5\u987B\u76F8\u7B49\uFF0C\u800C\u4E0D\u540C\u8F93\u5165\u5BF9\u5E94\u7684\u8F93\u51FA\u5FC5\u987B\u4E0D\u7B49\uFF0C\u76F8\u5F53\u4E8E\u5BF9\u6BCF\u5BF9\u6570\u636E\u6253\u4E0A\u552F\u4E00\u7684\u6307\u7EB9\u3002</p><p>\u4E00\u4E2AHash Table\u901A\u5E38\u5177\u6709\u4E0B\u5217\u65B9\u6CD5\uFF1A</p><ul><li>add\uFF1A\u589E\u52A0\u4E00\u7EC4\u952E\u503C\u5BF9</li><li>remove\uFF1A\u5220\u9664\u4E00\u7EC4\u952E\u503C\u5BF9</li><li>lookup\uFF1A\u67E5\u627E\u4F60\u54E5\u952E\u5BF9\u5E94\u7684\u503C</li></ul>',32),k=[u];function r(d,v){return s(),a("div",null,k)}var b=n(i,[["render",r],["__file","index.html.vue"]]);export{b as default};
